{"ast":null,"code":"import utils from \"./utils\";\nlet URL = \"http://localhost:3456/api\"; //The two methods below, are the utility-methods introduced here (use them if you like):\n//https://docs.google.com/document/d/1hF9P65v_AJKCjol_gFkm3oZ1eVTuOKc15V6pcb3iFa8/edit?usp=sharing\n\nfunction apiFacade() {\n  //OBSERVE fetchAny takes a url and a callback. The callback handles the data from the response body.\n  function getPersons(callback) {\n    // Change me to do something with data\n    utils.fetchAny(URL, callback);\n  }\n\n  function addEditPerson(person, callback) {\n    //Complete me. A smart version will handle both Add and Edit, but focus on Add (POST) only first\n    console.log(person, callback);\n\n    if (person.id === \"\") {\n      utils.fetchAny(URL, callback, \"POST\", person);\n    } else {\n      utils.fetchAny(URL + \"/\" + id, callback, \"PUT\", person);\n    }\n  }\n\n  function deletePerson(id, callback) {\n    //Complete me\n    utils.fetchAny(URL + \"/\" + id, callback, \"DELETE\", id);\n  }\n\n  return {\n    getPersons,\n    addEditPerson,\n    deletePerson\n  };\n}\n\nconst returnValue = apiFacade();\nexport default returnValue;","map":{"version":3,"sources":["/Users/hassanainali/Dropbox/CPH business/3. semester/Flow3/Week44/day3_ex3_react-crud-rest/src/apiFacade.js"],"names":["utils","URL","apiFacade","getPersons","callback","fetchAny","addEditPerson","person","console","log","id","deletePerson","returnValue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,IAAIC,GAAG,GAAG,2BAAV,C,CACA;AACA;;AAIA,SAASC,SAAT,GAAqB;AACnB;AACA,WAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B;AACAJ,IAAAA,KAAK,CAACK,QAAN,CAAeJ,GAAf,EAAoBG,QAApB;AACD;;AAED,WAASE,aAAT,CAAuBC,MAAvB,EAA+BH,QAA/B,EAAyC;AACvC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBH,QAApB;;AACA,QAAIG,MAAM,CAACG,EAAP,KAAc,EAAlB,EAAsB;AACpBV,MAAAA,KAAK,CAACK,QAAN,CAAeJ,GAAf,EAAoBG,QAApB,EAA8B,MAA9B,EAAsCG,MAAtC;AACD,KAFD,MAEO;AACLP,MAAAA,KAAK,CAACK,QAAN,CAAeJ,GAAG,GAAG,GAAN,GAAYS,EAA3B,EAA+BN,QAA/B,EAAyC,KAAzC,EAAgDG,MAAhD;AACD;AACF;;AAED,WAASI,YAAT,CAAsBD,EAAtB,EAA0BN,QAA1B,EAAoC;AAClC;AACAJ,IAAAA,KAAK,CAACK,QAAN,CAAeJ,GAAG,GAAG,GAAN,GAAYS,EAA3B,EAA+BN,QAA/B,EAAyC,QAAzC,EAAmDM,EAAnD;AACD;;AAED,SAAO;AACLP,IAAAA,UADK;AAELG,IAAAA,aAFK;AAGLK,IAAAA;AAHK,GAAP;AAKD;;AACD,MAAMC,WAAW,GAAGV,SAAS,EAA7B;AACA,eAAeU,WAAf","sourcesContent":["import utils from \"./utils\";\nlet URL = \"http://localhost:3456/api\";\n//The two methods below, are the utility-methods introduced here (use them if you like):\n//https://docs.google.com/document/d/1hF9P65v_AJKCjol_gFkm3oZ1eVTuOKc15V6pcb3iFa8/edit?usp=sharing\n\n\n\nfunction apiFacade() {\n  //OBSERVE fetchAny takes a url and a callback. The callback handles the data from the response body.\n  function getPersons(callback) {\n    // Change me to do something with data\n    utils.fetchAny(URL, callback);\n  }\n\n  function addEditPerson(person, callback) {\n    //Complete me. A smart version will handle both Add and Edit, but focus on Add (POST) only first\n    console.log(person, callback);\n    if (person.id === \"\") {\n      utils.fetchAny(URL, callback, \"POST\", person);\n    } else {\n      utils.fetchAny(URL + \"/\" + id, callback, \"PUT\", person);\n    }\n  }\n\n  function deletePerson(id, callback) {\n    //Complete me\n    utils.fetchAny(URL + \"/\" + id, callback, \"DELETE\", id);\n  }\n\n  return {\n    getPersons,\n    addEditPerson,\n    deletePerson\n  };\n}\nconst returnValue = apiFacade();\nexport default returnValue;\n\n"]},"metadata":{},"sourceType":"module"}