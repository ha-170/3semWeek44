{"ast":null,"code":"function makeOptions(method, body) {\n  method = method ? method : 'GET';\n  var opts = {\n    method: method,\n    headers: { ...(['PUT', 'POST'].includes(method) && {\n        //using spread operator to conditionally add member to headers object.\n        \"Content-type\": \"application/json\"\n      }),\n      \"Accept\": \"application/json\"\n    }\n  };\n\n  if (body) {\n    opts.body = JSON.stringify(body);\n  }\n\n  return opts;\n}\n\nfunction errorCheck(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nfunction fetchAny(url, callback, method, body) {\n  const options = makeOptions(method, body);\n  fetch(url, options).then(res => errorCheck(res)).then(data => callback(data)).catch(err => {\n    if (err.status) {\n      err.fullError.then(e => console.log(e.detail));\n    } else {\n      console.log(\"Network error\");\n    }\n  });\n}\n\nexport default {\n  fetchAny,\n  makeOptions\n};","map":{"version":3,"sources":["/Users/hassanainali/Dropbox/CPH business/3. semester/Flow3/Week44/day3_ex3_react-crud-rest/src/utils.js"],"names":["makeOptions","method","body","opts","headers","includes","JSON","stringify","errorCheck","res","ok","Promise","reject","status","fullError","json","fetchAny","url","callback","options","fetch","then","data","catch","err","e","console","log","detail"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;AAC/BD,EAAAA,MAAM,GAAGA,MAAM,GAACA,MAAD,GAAQ,KAAvB;AACA,MAAIE,IAAI,GAAI;AACVF,IAAAA,MAAM,EAAEA,MADE;AAEVG,IAAAA,OAAO,EAAE,EACP,IAAI,CAAC,KAAD,EAAO,MAAP,EAAeC,QAAf,CAAwBJ,MAAxB,KAAmC;AAAE;AACzC,wBAAgB;AADuB,OAAvC,CADO;AAGP,gBAAU;AAHH;AAFC,GAAZ;;AAQA,MAAGC,IAAH,EAAQ;AACNC,IAAAA,IAAI,CAACD,IAAL,GAAYI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAZ;AACD;;AACD,SAAOC,IAAP;AACH;;AAED,SAASK,UAAT,CAAoBC,GAApB,EAAwB;AACxB,MAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,WAAOC,OAAO,CAACC,MAAR,CAAe;AAACC,MAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAb;AAAqBC,MAAAA,SAAS,EAAEL,GAAG,CAACM,IAAJ;AAAhC,KAAf,CAAP;AACH;;AACD,SAAON,GAAG,CAACM,IAAJ,EAAP;AACC;;AACD,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,QAAvB,EAAiCjB,MAAjC,EAAyCC,IAAzC,EAA8C;AAC1C,QAAMiB,OAAO,GAAGnB,WAAW,CAACC,MAAD,EAAQC,IAAR,CAA3B;AACAkB,EAAAA,KAAK,CAACH,GAAD,EAAKE,OAAL,CAAL,CACCE,IADD,CACMZ,GAAG,IAAED,UAAU,CAACC,GAAD,CADrB,EAECY,IAFD,CAEMC,IAAI,IAAEJ,QAAQ,CAACI,IAAD,CAFpB,EAGCC,KAHD,CAGOC,GAAG,IAAG;AACT,QAAGA,GAAG,CAACX,MAAP,EAAc;AACZW,MAAAA,GAAG,CAACV,SAAJ,CAAcO,IAAd,CAAmBI,CAAC,IAAGC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd,CAAvB;AACD,KAFD,MAGI;AAACF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA+B;AACtC,GARF;AAUH;;AAED,eAAe;AAACX,EAAAA,QAAD;AAAWhB,EAAAA;AAAX,CAAf","sourcesContent":["function makeOptions(method, body) {\n    method = method?method:'GET';\n    var opts =  {\n      method: method,\n      headers: {\n        ...(['PUT','POST'].includes(method) && { //using spread operator to conditionally add member to headers object.\n        \"Content-type\": \"application/json\"}),\n        \"Accept\": \"application/json\"\n      }\n    }\n    if(body){\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n}\n\nfunction errorCheck(res){\nif(!res.ok){\n    return Promise.reject({status: res.status, fullError: res.json() })\n}\nreturn res.json();\n}\nfunction fetchAny(url, callback, method, body){\n    const options = makeOptions(method,body);\n    fetch(url,options)\n    .then(res=>errorCheck(res))\n    .then(data=>callback(data))\n    .catch(err =>{\n        if(err.status){\n          err.fullError.then(e=> console.log(e.detail))\n        }\n        else{console.log(\"Network error\"); }\n     }\n    );\n}\n\nexport default {fetchAny, makeOptions};"]},"metadata":{},"sourceType":"module"}