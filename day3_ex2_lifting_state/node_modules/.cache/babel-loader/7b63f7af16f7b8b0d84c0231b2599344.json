{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hassanainali/Dropbox/CPH business/3. semester/Flow3/Week44/day3_ex2_lifting_state/src/Person.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { v1 as uuid } from 'uuid';\nimport NewPerson from \"./NewPerson\";\nimport PersonList from \"./PersonList\";\n\nfunction Person() {\n  _s();\n\n  const initialData = [{\n    id: uuid(),\n    name: \"Hassanain\"\n  }, {\n    id: uuid(),\n    name: \"Rasmus\"\n  }, {\n    id: uuid(),\n    name: \"Christian\"\n  }];\n  const [persons, setPersons] = useState(initialData);\n  const [newPerson, setNewPerson] = useState({\n    id: \"\",\n    name: \"\"\n  }); // console.log(persons)\n\n  const addPerson = person => {\n    if (person.id === \"\") {\n      // id=-1 Indicates a new object\n      person.id = uuid();\n      persons.push(person);\n    } else {\n      //if id != \"\", it's an existing todo. Find it and add changes\n      let personToEdit = persons.find(p => p.id === person.id);\n      personToEdit.name = person.name;\n    }\n\n    setPersons([...persons]);\n    setNewPerson({\n      id: \"\",\n      name: \"\"\n    });\n  };\n\n  const deletePerson = id => {\n    persons.pop(persons.find(person => person.id === id));\n    setPersons([...persons]);\n  };\n\n  const editPerson = id => {\n    setNewPerson(persons.find(person => person.id === id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Props and Lifting State Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7 allPersons\",\n        children: /*#__PURE__*/_jsxDEV(PersonList, {\n          persons: persons,\n          deletePerson: deletePerson,\n          editPerson: editPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 new-person\",\n        children: /*#__PURE__*/_jsxDEV(NewPerson, {\n          addPerson: addPerson,\n          nextPerson: newPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Person, \"jXcImPk4BzYkb81Rt+Q4ltj443g=\");\n\n_c = Person;\nexport default Person;\n\nvar _c;\n\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"sources":["/Users/hassanainali/Dropbox/CPH business/3. semester/Flow3/Week44/day3_ex2_lifting_state/src/Person.js"],"names":["React","useState","v1","uuid","NewPerson","PersonList","Person","initialData","id","name","persons","setPersons","newPerson","setNewPerson","addPerson","person","push","personToEdit","find","p","deletePerson","pop","editPerson"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { v1 as uuid } from 'uuid';\nimport NewPerson from \"./NewPerson\";\nimport PersonList from \"./PersonList\";\n\nfunction Person() {\n    const initialData = [\n        { id: uuid(), name: \"Hassanain\" },\n        { id: uuid(), name: \"Rasmus\" },\n        { id: uuid(), name: \"Christian\" }\n    ]\n    const [persons, setPersons] = useState(initialData);\n    const [newPerson, setNewPerson] = useState({ id: \"\", name: \"\" });\n    // console.log(persons)\n  \n    const addPerson = person => {\n        if (person.id === \"\") { // id=-1 Indicates a new object\n            person.id = uuid();\n            persons.push(person);\n        } else {//if id != \"\", it's an existing todo. Find it and add changes\n            let personToEdit = persons.find(p => p.id === person.id);\n            personToEdit.name = person.name;\n        }\n        setPersons([...persons]);\n        setNewPerson({id:\"\", name:\"\"})\n    };\n\n    const deletePerson = id => {\n        persons.pop(persons.find(person => person.id === id));\n        setPersons([...persons]);\n    }\n    const editPerson = id => {\n        setNewPerson(persons.find(person => person.id === id));\n    }\n\n    return (\n        <div className=\"container outer\">\n            <h2>Props and Lifting State Demo</h2>\n            <div className=\"row\">\n            <div className=\"col-7 allPersons\">\n                <PersonList \n                persons={persons} \n                deletePerson={deletePerson} \n                editPerson={editPerson}\n                />\n            </div>\n            <div className=\"col-4 new-person\">\n                <NewPerson \n                addPerson={addPerson}\n                nextPerson={newPerson}            \n                />\n            </div>\n            </div>\n        </div>\n    );\n}\n  export default Person;\n"]},"metadata":{},"sourceType":"module"}