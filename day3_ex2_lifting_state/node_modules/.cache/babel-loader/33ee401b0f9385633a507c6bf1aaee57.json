{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hassanainali/Dropbox/CPH business/3. semester/Flow3/Week44/day3_ex2_lifting_state/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PersonList from \"./PersonList\";\nimport NewPerson from \"./NewPerson\";\nimport { v1 as uuid } from 'uuid';\n\nfunction App() {\n  _s();\n\n  const initialData = [{\n    id: uuid(),\n    name: \"Hassanain\"\n  }, {\n    id: uuid(),\n    name: \"Rasmus\"\n  }, {\n    id: uuid(),\n    name: \"Christian\"\n  }];\n  const [persons, setPersons] = useState(initialData);\n  const [newPerson, setNewPerson] = useState({\n    id: \"\",\n    name: \"\"\n  });\n  console.log(persons);\n\n  const addPerson = person => {\n    if (person.id === \"\") {\n      // id=-1 Indicates a new object\n      person.id = uuid();\n      persons.push(person);\n    } else {\n      //if id != \"\", it's an existing todo. Find it and add changes\n      let personToEdit = persons.find(p => p.id === person.id);\n      personToEdit.name = person.name;\n\n      const deletePerson = index => {};\n\n      const editPerson = index => {};\n    }\n\n    setPersons([...persons]);\n    setNewPerson({\n      id: \"\",\n      name: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 25\n      },\n      children: \"Props and Lifting State Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 allTodos\",\n        children: /*#__PURE__*/_jsxDEV(PersonList, {\n          persons: persons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5 new-todo\",\n        children: /*#__PURE__*/_jsxDEV(NewPerson, {\n          addPerson: addPerson,\n          nextPerson: newPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jXcImPk4BzYkb81Rt+Q4ltj443g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hassanainali/Dropbox/CPH business/3. semester/Flow3/Week44/day3_ex2_lifting_state/src/App.js"],"names":["React","useState","PersonList","NewPerson","v1","uuid","App","initialData","id","name","persons","setPersons","newPerson","setNewPerson","console","log","addPerson","person","push","personToEdit","find","p","deletePerson","index","editPerson","textAlign","marginBottom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAG,CAClB;AAAEC,IAAAA,EAAE,EAAEH,IAAI,EAAV;AAAcI,IAAAA,IAAI,EAAE;AAApB,GADkB,EAElB;AAAED,IAAAA,EAAE,EAAEH,IAAI,EAAV;AAAcI,IAAAA,IAAI,EAAE;AAApB,GAFkB,EAGlB;AAAED,IAAAA,EAAE,EAAEH,IAAI,EAAV;AAAcI,IAAAA,IAAI,EAAE;AAApB,GAHkB,CAApB;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,WAAD,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC;AAAEO,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE;AAAhB,GAAD,CAA1C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AAEA,QAAMM,SAAS,GAAGC,MAAM,IAAI;AAC1B,QAAIA,MAAM,CAACT,EAAP,KAAc,EAAlB,EAAsB;AAAE;AACtBS,MAAAA,MAAM,CAACT,EAAP,GAAYH,IAAI,EAAhB;AACAK,MAAAA,OAAO,CAACQ,IAAR,CAAaD,MAAb;AACD,KAHD,MAGO;AAAC;AACN,UAAIE,YAAY,GAAGT,OAAO,CAACU,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACb,EAAF,KAASS,MAAM,CAACT,EAAlC,CAAnB;AACAW,MAAAA,YAAY,CAACV,IAAb,GAAoBQ,MAAM,CAACR,IAA3B;;AAEF,YAAMa,YAAY,GAAIC,KAAD,IAAW,CAAE,CAAlC;;AACA,YAAMC,UAAU,GAAID,KAAD,IAAW,CAAE,CAAhC;AAEC;;AACDZ,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,CAAV;AACAG,IAAAA,YAAY,CAAC;AAACL,MAAAA,EAAE,EAAC,EAAJ;AAAQC,MAAAA,IAAI,EAAC;AAAb,KAAD,CAAZ;AACD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,YAAY,EAAC;AAApC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEhB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAEM,SADb;AAEE,UAAA,UAAU,EAAEJ;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA7CQN,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PersonList from \"./PersonList\"\nimport NewPerson from \"./NewPerson\"\nimport { v1 as uuid } from 'uuid';\n\nfunction App() {\n  const initialData = [\n    { id: uuid(), name: \"Hassanain\" },\n    { id: uuid(), name: \"Rasmus\" },\n    { id: uuid(), name: \"Christian\" }\n  ]\n  const [persons, setPersons] = useState(initialData);\n  const [newPerson, setNewPerson] = useState({ id: \"\", name: \"\" });\n  console.log(persons)\n\n  const addPerson = person => {\n    if (person.id === \"\") { // id=-1 Indicates a new object\n      person.id = uuid();\n      persons.push(person);\n    } else {//if id != \"\", it's an existing todo. Find it and add changes\n      let personToEdit = persons.find(p => p.id === person.id);\n      personToEdit.name = person.name;\n\n    const deletePerson = (index) => {}\n    const editPerson = (index) => {}\n\n    }\n    setPersons([...persons]);\n    setNewPerson({id:\"\", name:\"\"})\n  };\n  \n  return (\n    <div className=\"container outer\">\n      <h2 style={{ textAlign: \"center\", marginBottom:25 }}>\n        Props and Lifting State Demo\n      </h2>\n\n      <div className=\"row\">\n        <div className=\"col-6 allTodos\">\n          <PersonList persons={persons} />\n        </div>\n        <div className=\"col-5 new-todo\">\n          <NewPerson\n            addPerson={addPerson}\n            nextPerson={newPerson}            \n          />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}